// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sagem.DataAccess.SQL.CF.Data;

#nullable disable

namespace Sagem.DataAccess.SQL.CF.Migrations
{
    [DbContext(typeof(BusinessDbContext))]
    partial class BusinessDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Sagem.DataAccess.SQL.CF.Data.Departement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departements");
                });

            modelBuilder.Entity("Sagem.DataAccess.SQL.CF.Data.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("HireDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ManagerId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Sagem.DataAccess.SQL.CF.Data.EmployeeDepartement", b =>
                {
                    b.Property<int>("DepId")
                        .HasColumnType("int");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.HasKey("DepId", "EmpId");

                    b.HasIndex("EmpId");

                    b.ToTable("EmployeeDepartements", (string)null);
                });

            modelBuilder.Entity("Sagem.DataAccess.SQL.CF.Data.EmployeeDepartement", b =>
                {
                    b.HasOne("Sagem.DataAccess.SQL.CF.Data.Departement", "Departement")
                        .WithMany("EmployeeDepartements")
                        .HasForeignKey("DepId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sagem.DataAccess.SQL.CF.Data.Employee", "Employee")
                        .WithMany("EmployeeDepartements")
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departement");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Sagem.DataAccess.SQL.CF.Data.Departement", b =>
                {
                    b.Navigation("EmployeeDepartements");
                });

            modelBuilder.Entity("Sagem.DataAccess.SQL.CF.Data.Employee", b =>
                {
                    b.Navigation("EmployeeDepartements");
                });
#pragma warning restore 612, 618
        }
    }
}
